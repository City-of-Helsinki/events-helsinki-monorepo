name: Events Helsinki Build & Staging
on:
  push:
    branches:
      - main

# allow only one run at a time
concurrency: ${{ github.workflow }}

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW_STAGING }}
  BUILD_ARTIFACT_FOLDER: 'build_artifacts'
  SERVICE_ARTIFACT_FOLDER: 'service_artifacts'
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN_STAGING }}
  SERVICE_PORT: 3000
  PROJECT: events-graphql-proxy
  K8S_REQUEST_CPU: 50m
  K8S_REQUEST_RAM: 150Mi
  K8S_LIMIT_CPU: 200m
  K8S_LIMIT_RAM: 400Mi
  # horizontal pod autoscaler
  K8S_HPA_ENABLED: true
  K8S_HPA_MAX_REPLICAS: 3
  K8S_HPA_MIN_REPLICAS: 1
  K8S_HPA_MAX_CPU_AVG: 80 # 80% from request
  #  K8S_HPA_MAX_RAM_AVG: 80 # 80% from request

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v2
      - name: Build
        uses: andersinno/kolga-build-action@v2
        env:
          DOCKER_IMAGE_NAME: ${{ env.PROJECT }}-staging
          DOCKER_BUILD_ARG_APP_PORT: ${{ env.SERVICE_PORT }}
          DOCKER_BUILD_ARG_PROJECT: ${{ env.PROJECT }}
          DOCKER_BUILD_ARG_GRAPHQL_PROXY_PORT: 4100
          DOCKER_BUILD_ARG_GRAPHQL_PROXY_CMS_API_BASE_URL: 'https://cms.test.kuva.hel.ninja/api/'
          DOCKER_BUILD_ARG_GRAPHQL_PROXY_API_BASE_URL: 'https://api.hel.fi/linkedevents/v1/'
          DOCKER_BUILD_ARG_GRAPHQL_PROXY_MAP_OPEN_DATA_API_BASE_URL: 'https://kartta.hel.fi/ws/geoserver/avoindata'
          DOCKER_BUILD_ARG_GRAPHQL_PROXY_SENTRY_DSN: ${{ secrets.GH_SENTRY_DSN }}
          DOCKER_BUILD_ARG_GRAPHQL_PROXY_SENTRY_ENVIRONMENT: 'staging'
  staging:
    runs-on: ubuntu-latest
    needs: build
    name: Staging and Accept
    steps:
      - uses: actions/checkout@v2
      - uses: andersinno/kolga-setup-action@v2

      - name: Deploy
        uses: andersinno/kolga-deploy-action@v2
        with:
          track: 'staging'
        env:
          K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE_STAGING_TAPAHTUMAT }}
          ENVIRONMENT_URL: https://${{ secrets.ENVIRONMENT_URL_STAGING_PROXY }} # events-graphql-proxy.test.kuva.hel.ninja
          ENVIRONMENT_SLUG: ${{ env.PROJECT }}
          DOCKER_IMAGE_NAME: ${{ env.PROJECT }}-staging
          K8S_SECRET_NEXT_PUBLIC_FEDERATION_ROUTER_ENDPOINT: ${{ env.NEXT_PUBLIC_FEDERATION_ROUTER_ENDPOINT }}
          K8S_SECRET_NEXT_PUBLIC_CMS_ORIGIN: ${{ env.NEXT_PUBLIC_CMS_ORIGIN }}
          K8S_SECRET_NEXT_PUBLIC_LINKEDEVENTS_EVENT_ENDPOINT: ${{ env.NEXT_PUBLIC_LINKEDEVENTS_EVENT_ENDPOINT }}
          K8S_SECRET_NEXT_PUBLIC_APP_ORIGIN: ${{ env.CUSTOM_ENVIRONMENT_URL }}
          K8S_SECRET_NEXT_PUBLIC_ALLOW_UNAUTHORIZED_REQUESTS: 1
          K8S_SECRET_NEXT_PUBLIC_DEBUG: 1
          K8S_SECRET_APP_PORT: ${{ env.SERVICE_PORT }}
          K8S_SECRET_PROJECT: ${{ env.PROJECT }}
          PROJECT: ${{ env.PROJECT }}
