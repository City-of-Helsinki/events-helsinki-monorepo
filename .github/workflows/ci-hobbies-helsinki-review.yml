name: Hobbies helsinki Review & Browser tests

on:
  push:
    branches:
      - main
    paths:
      - 'apps/hobbies-helsinki/**'
      - 'packages/**'
      - 'package.json'
      - 'yarn.lock'
      - '.yarnrc.yml'
      - '*.base.json'
      - '*.base.js'
      - '.prettier*.*'
      - '.github/workflows/ci-hobbies-helsinki-review.yml'
      - 'Dockerfile'
      - '*.Dockerfile'
      - 'docker-compose.yml'
      - 'docker-compose.*.yml'
      - '!**/README.md'

  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    # Optional:
    #   Only consider those files/paths to trigger the github action
    #   to prevent unnecessary builds.
    paths:
      - 'apps/hobbies-helsinki/**'
      - 'packages/**'
      - 'package.json'
      - 'yarn.lock'
      - '.yarnrc.yml'
      - '*.base.json'
      - '*.base.js'
      - '.prettier*.*'
      - '.github/workflows/ci-hobbies-helsinki-review.yml'
      - 'Dockerfile'
      - '*.Dockerfile'
      - 'docker-compose.yml'
      - 'docker-compose.*.yml'
      - '!**/README.md'

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW }}
  BUILD_ARTIFACT_FOLDER: 'build_artifacts'
  SERVICE_ARTIFACT_FOLDER: 'service_artifacts'
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN_STAGING }}
  SERVICE_PORT: 3000
  PROJECT: hobbies-helsinki
  K8S_REQUEST_CPU: 50m
  K8S_REQUEST_RAM: 150Mi
  K8S_LIMIT_CPU: 200m
  K8S_LIMIT_RAM: 400Mi
  K8S_LIVENESS_PATH: /api/healthz
  K8S_READINESS_PATH: /api/readiness
  NEXT_PUBLIC_SENTRY_ENVIRONMENT: 'test'
  NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.GH_SENTRY_DSN }}
  NEXT_PUBLIC_SENTRY_TRACE_SAMPLE_RATE: 0
  NEXTJS_DISABLE_SENTRY: 1
  SENTRY_AUTH_TOKEN: ${{ secrets.GH_SENTRY_AUTH_TOKEN }}
  NEXT_PUBLIC_FEDERATION_ROUTER_ENDPOINT: https://events-graphql-federation-hobbies.kuva.hel.ninja/
  NEXT_PUBLIC_CMS_ORIGIN: https://harrastus.hkih.stage.geniem.io
  NEXT_PUBLIC_LINKEDEVENTS_EVENT_ENDPOINT: https://api.hel.fi/linkedevents/v1/event
  NEXT_PUBLIC_MATOMO_URL_BASE: '//webanalytics.digiaiiris.com/js/'
  NEXT_PUBLIC_MATOMO_SITE_ID: 939
  NEXT_PUBLIC_MATOMO_SRC_URL: 'piwik.min.js'
  NEXT_PUBLIC_MATOMO_TRACKER_URL: 'tracker.php'
  NEXT_PUBLIC_MATOMO_ENABLED: 0
  CUSTOM_ENVIRONMENT_URL: https://harrastus-helsinki-${{ github.event.pull_request.number }}.${{ secrets.BASE_DOMAIN_STAGING }}

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v3

      # @see https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#local-cache
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build the Hobbies-Helsinki image
        uses: andersinno/kolga-build-action@v2
        env:
          DOCKER_BUILD_SOURCE: ./Dockerfile
          DOCKER_BUILD_CONTEXT: .
          DOCKER_BUILD_TARGET: runner
          DOCKER_IMAGE_NAME: ${{ env.PROJECT }}-review
          DOCKER_BUILD_ARG_NEXT_PUBLIC_CMS_ORIGIN: ${{ env.NEXT_PUBLIC_CMS_ORIGIN }}
          DOCKER_BUILD_ARG_NEXT_PUBLIC_FEDERATION_ROUTER_ENDPOINT: ${{ env.NEXT_PUBLIC_FEDERATION_ROUTER_ENDPOINT }}
          DOCKER_BUILD_ARG_NEXT_PUBLIC_LINKEDEVENTS_EVENT_ENDPOINT: ${{ env.NEXT_PUBLIC_LINKEDEVENTS_EVENT_ENDPOINT }}
          DOCKER_BUILD_ARG_NEXT_PUBLIC_APP_ORIGIN: ${{ env.CUSTOM_ENVIRONMENT_URL }}
          DOCKER_BUILD_ARG_NEXT_PUBLIC_MATOMO_URL_BASE: ${{ env.NEXT_PUBLIC_MATOMO_URL_BASE }}
          DOCKER_BUILD_ARG_NEXT_PUBLIC_MATOMO_SITE_ID: ${{ env.NEXT_PUBLIC_MATOMO_SITE_ID }}
          DOCKER_BUILD_ARG_NEXT_PUBLIC_MATOMO_SRC_URL: ${{ env.NEXT_PUBLIC_MATOMO_SRC_URL }}
          DOCKER_BUILD_ARG_NEXT_PUBLIC_MATOMO_TRACKER_URL: ${{ env.NEXT_PUBLIC_MATOMO_TRACKER_URL }}
          DOCKER_BUILD_ARG_NEXT_PUBLIC_MATOMO_ENABLED: ${{ env.NEXT_PUBLIC_MATOMO_ENABLED }}
          DOCKER_BUILD_ARG_NEXT_PUBLIC_ALLOW_UNAUTHORIZED_REQUESTS: 1
          DOCKER_BUILD_ARG_NEXT_PUBLIC_SENTRY_ENVIRONMENT: 'test'
          DOCKER_BUILD_ARG_NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.GH_SENTRY_DSN }}
          DOCKER_BUILD_ARG_NEXT_PUBLIC_SENTRY_TRACE_SAMPLE_RATE: ${{ env.NEXT_PUBLIC_SENTRY_TRACE_SAMPLE_RATE }}
          DOCKER_BUILD_ARG_SENTRY_AUTH_TOKEN: ${{ secrets.GH_SENTRY_AUTH_TOKEN }}
          DOCKER_BUILD_ARG_NEXT_PUBLIC_DEBUG: 1
          DOCKER_BUILD_ARG_APP_PORT: ${{ env.SERVICE_PORT }}
          DOCKER_BUILD_ARG_PROJECT: ${{ env.PROJECT }}
          DOCKER_BUILD_ARG_NEXTJS_DISABLE_SENTRY: ${{env.NEXTJS_DISABLE_SENTRY}}
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
  review:
    runs-on: ubuntu-latest
    needs: build
    name: Review and Accept

    # allow only one deployment at a time
    concurrency: ${{ github.workflow }}-${{ github.head_ref }}

    steps:
      - uses: actions/checkout@v2
      - uses: andersinno/kolga-setup-action@v2

      - name: Deploy
        uses: andersinno/kolga-deploy-action@v2
        env:
          ENVIRONMENT_URL: ${{ env.CUSTOM_ENVIRONMENT_URL }}
          ENVIRONMENT_SLUG: ${{ env.PROJECT }}
          DOCKER_IMAGE_NAME: ${{ env.PROJECT }}-review
          K8S_SECRET_NEXT_PUBLIC_CMS_ORIGIN: ${{ env.NEXT_PUBLIC_CMS_ORIGIN }}
          K8S_SECRET_NEXT_PUBLIC_FEDERATION_ROUTER_ENDPOINT: ${{ env.NEXT_PUBLIC_FEDERATION_ROUTER_ENDPOINT }}
          K8S_SECRET_NEXT_PUBLIC_LINKEDEVENTS_EVENT_ENDPOINT: ${{ env.NEXT_PUBLIC_LINKEDEVENTS_EVENT_ENDPOINT }}
          K8S_SECRET_NEXT_PUBLIC_APP_ORIGIN: ${{ env.CUSTOM_ENVIRONMENT_URL }}
          K8S_SECRET_NEXT_PUBLIC_ALLOW_UNAUTHORIZED_REQUESTS: 1
          K8S_SECRET_NEXT_PUBLIC_DEBUG: 1
          K8S_SECRET_APP_PORT: ${{ env.SERVICE_PORT }}
          K8S_SECRET_PROJECT: ${{ env.PROJECT }}
          PROJECT: ${{ env.PROJECT }}

      - name: Create PR comment for Deploy URL
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: ${{ env.PROJECT }}-deployment-url
          message: |
            **Hobbies-Helsinki branch is deployed to: ${{ env.CUSTOM_ENVIRONMENT_URL }}** :rocket::rocket::rocket:

      # browser tests
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 16.x
      - name: Create yarn cache directory path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --immutable

      - name: Run Acceptance Tests
        id: testcafe
        working-directory: apps/hobbies-helsinki
        run: yarn test:browser:ci
        env:
          BROWSER_TESTS_ENV_URL: ${{ env.CUSTOM_ENVIRONMENT_URL }}
      - name: Upload screenshots and videos of failed tests to artifact
        uses: actions/upload-artifact@v2
        with:
          name: report
          path: ./report
        if: always() && steps.testcafe.outcome == 'failure'
      - name: Create/update PR comment for Acceptance Test results
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: ${{ env.PROJECT }}-testcafe-results
          message: |
            ## TestCafe result is __${{ steps.testcafe.outcome }}__ for ${{ env.CUSTOM_ENVIRONMENT_URL }}! ${{steps.testcafe.outcome == 'success' && ':laughing::tada::tada::tada:' || ':crying_cat_face::anger::boom::boom:' }}
        if: always() && (steps.testcafe.outcome == 'success' || steps.testcafe.outcome == 'failure')
