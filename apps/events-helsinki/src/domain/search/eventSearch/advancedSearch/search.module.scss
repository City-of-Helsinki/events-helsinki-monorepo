@use '../../../../styles/breakpoints' as breakpoints;

$buttonWidth: 180px;

.searchContainerKoros {
  fill: var(--color-white);
}

.searchContainer {
  color: var(--color-primary-black);
  background-color: var(--color-theme-background);
  padding: 2.375rem 0 1.5rem 0;
  position: relative;

  .contentContainer {
    margin-bottom: 2.375rem;

    h1 {
      font-size: var(--fontsize-heading-xl);
      font-weight: 500;
      margin-top: 2px;
      margin-bottom: var(--spacing-xl);
    }
  }

  .rowWrapper {
    display: grid;
    height: fit-content;
    align-items: center;

    grid-template-columns: 1fr;
    grid-gap: var(--spacing-m);

    margin-bottom: var(--spacing-xs);

    @include breakpoints.respond-above(s) {
      grid-template-columns: 1fr;
      grid-gap: var(--spacing-xs);

      margin-bottom: var(--spacing-xs);
    }
  }

  .fillGridRow {
    @include breakpoints.respond-above(m) {
      grid-column: 1 / 1;
    }
  }

  .buttonWrapper {
    @include breakpoints.respond-above(m) {
      grid-column: span 1 / 5;
    }
    @include breakpoints.respond-below(m) {
      grid-column: 1 / 3;
    }
  }

  .row {
    display: grid;
    grid-gap: var(--spacing-xs);

    @include breakpoints.respond-above(s) {
      grid-template-columns: 1fr 1fr;
    }

    @include breakpoints.respond-above(m) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  .textSearchRow {
    align-items: flex-end;

    @include breakpoints.respond-above(m) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }

    & > :first-child {
      @include breakpoints.respond-above(s) {
        grid-column: 1 / 5;
      }
    }
  }

  .checkbox {
    margin-top: var(--spacing-xs);
    label {
      display: flex;
      align-items: center;
      color: var(--color-primary-black);
    }
    @include breakpoints.respond-above(s) {
      margin-top: 0;
    }
  }

  .dateSelectorWrapper {
    & > div {
      height: -webkit-fill-available; // Fill 2px of available space under dropdown
    }
  }

  .targetAgeGroupSelector {
    --fontsize-body-l: 'var(--fontsize-body-m)';
    --border-width: '0px';
    --menu-item-height: 50px; // Fix the empty option's height
    span {
      margin-right: 0;
      svg {
        margin-right: 1rem;
        span {
          margin: 0;
        }
      }
    }

    label {
      display: inline;
    }

    button {
      cursor: pointer;
      border: 0.125rem solid var(--color-white);
      background: transparent;
      min-height: var(--dropdown-height);

      padding: 0 0.875rem;
      width: 100%;
      height: 100%;
      display: flex;
      outline: none;
      text-align: left;
      svg {
        top: inherit;
        --icon-size: 1.25rem;
      }
    }
  }
}

.label {
  font-size: var(--fontsize-body-m);
  font-weight: 500;
  line-height: normal;

  @include breakpoints.respond-below(s) {
    display: none;
  }
}
