@use '../../../styles/breakpoints' as breakpoints;
@use '../../../styles/variables' as variables;

.searchHeader {
  grid-column: 1 / -1 !important;
  position: relative;
  // Give increased z-index to show mobile actions
  z-index: 2;

  // Menu that contains the search form
  .searchMenu {
    padding: variables.$spacing-xs;
    // Fullscreen minus the main navigation height
    height: calc(100vh - 50px);
    background-color: var(--background-color);

    .closeSearchWrapper {
      padding: variables.$spacing-xs variables.$spacing-s;
    }

    @include breakpoints.respond-above(s) {
      .closeSearchWrapper {
        padding: 0 variables.$spacing-s;
      }
    }

    @include breakpoints.respond-above(m) {
      height: auto;
      display: grid;
      grid-template-rows: 1fr;
      grid-template-columns: 4fr 1fr;
      grid-column-gap: variables.$spacing-s;

      // Remove margin from from to get it aligned correctly
      & > div > form {
        margin-top: 0;
        margin-bottom: 0;
      }

      .closeSearch {
        margin-left: auto;
        width: 230px;
        height: 56px;
      }
    }
  }

  .searchActions {
    background-color: var(--background-color);
    display: flex;
    flex-direction: row;
    align-items: auto;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;

    @include breakpoints.respond-above(m) {
      padding: 0 0 variables.$spacing-layout-xs 0;
      position: initial;
    }

    .countAndTags {
      width: 0;
      visibility: hidden;

      @include breakpoints.respond-above(m) {
        display: flex;
        visibility: visible;
        width: auto;
        align-items: center;
        justify-content: center;
      }
    }

    button {
      width: 50%;
      border: none;
      margin-left: auto !important;
      background-color: white;

      &:focus {
        outline: 2px solid var(--color-coat-of-arms); /* todo: use color-primary-black instead */
      }

      @include breakpoints.respond-above(m) {
        margin-right: var(--spacing-s);
        width: unset;
        border: 2px solid;
        height: 45px;
      }
    }

    //Select first button element in searchActions div
    button:first-of-type {
      border: none;
    }

    @include breakpoints.respond-above(m) {
      button:last-child {
        margin-left: 0 !important;
      }
    }
  }
}

@include breakpoints.respond-above(m) {
  .paddingClosed {
    padding: variables.$spacing-layout-xs 0 variables.$spacing-layout-xs 0 !important;
  }
}
.horizontalDivider {
  //get navigation color...?
  border-top: 1px solid #ccc;
  width: 100%;
}

.searchArea {
  padding-top: variables.$spacing-m;
  grid-column: 1 / -1 !important;

  display: inherit;
  grid-template-columns: inherit;
  grid-template-rows: inherit;
  background-color: variables.$color-engel;

  & > * {
    grid-column: 2;
    margin-bottom: 0;
  }
}

.searchContainer {
  color: var(--color-primary-black);
  background-color: var(--color-theme-background);
  padding: 2.375rem 0 1.5rem 0;
  position: relative;

  .noKoros {
    margin-bottom: 0 !important;
  }

  .contentContainer {
    margin-bottom: 2.375rem;

    h2 {
      font-size: var(--fontsize-heading-xl);
      font-weight: 500;
      margin-top: 2px;
      margin-bottom: var(--spacing-xl);
    }
  }
}

.searchContainerKoros {
  fill: var(--color-white);
}
