version: '3.9'
services:
  # Start hobbies in development
  # docker-compose -f docker-compose.hobbies.yml up develop
  develop:
    container_name: hobbies-helsinki-develop
    profiles:
      - donotstart
    stdin_open: true
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
    build:
      context: .
      dockerfile: Dockerfile
      target: develop
      args:
        APP_PORT: 3000
        PROJECT: hobbies-helsinki
    volumes:
      # Share the source code to allow development
      - .:/app/
      # Prevent sharing of node_modules between host and container
      # to avoid ownership and/or platform issues
      - build_hobbies-helsinki:/app/apps/hobbies-helsinki/.next
      - nm_hobbies-helsinki:/app/node_modules

  # Convenience production "deps" stage service for debugging
  # Build > docker buildx bake -f docker-compose.hobbies-helsinki.yml --progress: tty deps
  deps:
    container_name: hobbies-helsinki-multistage-deps
    profiles:
      - donotstart
    stdin_open: true
    build:
      context: .
      dockerfile: Dockerfile
      target: deps
      args:
        PROJECT: hobbies-helsinki
    env_file:
      - .env
  # Convenience production "builder" stage service for debugging
  # Build > docker buildx bake -f docker-compose.hobbies-helsinki.yml --progress=tty runner
  builder:
    container_name: hobbies-helsinki-multistage-builder
    profiles:
      - donotstart
    stdin_open: true
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
      args:
        - APP_PORT=3000
        - PROJECT=hobbies-helsinki
        - NEXT_PUBLIC_CMS_GRAPHQL_ENDPOINT=moro${NEXT_PUBLIC_CMS_GRAPHQL_ENDPOINT}
        - NEXT_PUBLIC_EVENTS_GRAPHQL_ENDPOINT=${NEXT_PUBLIC_EVENTS_GRAPHQL_ENDPOINT}
        - NEXT_PUBLIC_LINKEDEVENTS_EVENT_ENDPOINT=${NEXT_PUBLIC_LINKEDEVENTS_EVENT_ENDPOINT}
        - NEXT_PUBLIC_APP_ORIGIN=${NEXT_PUBLIC_APP_ORIGIN}
        - NEXT_PUBLIC_MATOMO_SITE_ID=${NEXT_PUBLIC_MATOMO_SITE_ID}
        - NEXT_PUBLIC_MATOMO_ENABLED=${NEXT_PUBLIC_MATOMO_ENABLED}
        - NEXT_PUBLIC_ALLOW_UNAUTHORIZED_REQUESTS=${NEXT_PUBLIC_ALLOW_UNAUTHORIZED_REQUESTS}
        - NEXT_PUBLIC_SENTRY_ENVIRONMENT=${NEXT_PUBLIC_SENTRY_ENVIRONMENT}
        - NEXT_PUBLIC_SENTRY_DSN=${NEXT_PUBLIC_SENTRY_DSN}
        - NEXT_PUBLIC_SENTRY_TRACE_SAMPLE_RATE=${NEXT_PUBLIC_SENTRY_TRACE_SAMPLE_RATE}
        - SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
        - NEXT_PUBLIC_DEBUG=${NEXT_PUBLIC_DEBUG}
        - NEXTJS_DISABLE_SENTRY=1
    env_file:
      - .env
  # Convenience production "runner" stage service for debugging
  # Build > docker buildx bake -f docker-compose.hobbies-helsinki.yml --progress=tty runner
  # Run   > docker-compose -f docker-compose.hobbies-helsinki.yml --env-file ./apps/hobbies-helsinki/.env.local up runner
  runner:
    container_name: hobbies-helsinki-multistage-runner
    # profiles:
    #   - donotstart
    stdin_open: true
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
      args:
        APP_PORT: 3000
        PROJECT: hobbies-helsinki
    env_file:
      - .env
volumes:
  build_hobbies-helsinki:
  nm_hobbies-helsinki:
