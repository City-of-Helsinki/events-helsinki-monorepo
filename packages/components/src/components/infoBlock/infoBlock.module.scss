@use '../../styles/breakpoints' as breakpoints;
@use '../../styles/variables' as variables;

.infoBlock {
  .name {
    display: flex;
    align-items: center;

    & > svg {
      margin-right: variables.$spacing-xs;
    }
  }

  .content {
    margin: 0;
    padding: 0;
    list-style-type: none;
    white-space: pre;

    line-height: variables.$lineheight-l;

    & > li:not(:last-child) {
      margin-bottom: variables.$spacing-s;
    }
  }

  &.card {
    .name {
      font-weight: 500;
    }

    .content {
      // Width of the icon + it's whitespace
      padding-left: calc(24px + #{variables.$spacing-xs});
    }
  }
}

.link,
.button {
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  min-width: 8rem;

  font-weight: 700;
  text-decoration: none !important;

  &:hover {
    text-decoration: underline;
  }

  .body &,
  .list & {
    // Custom color value. Custom value was created so that enough contrast
    // could be generated between the text and the background.
    --info-block-link-color: #008667;

    font-size: variables.$fontsize-body-l;
    color: var(--info-block-link-color);

    &:visited,
    & svg {
      color: var(--info-block-link-color) !important;
    }
  }

  .card & {
    font-weight: 500;
    font-size: variables.$fontsize-body-m;
    color: variables.$color-bus;
  }
}

.button {
  min-width: unset;

  &[data-open='true'] svg {
    transform: rotate(180deg);
  }
}

.list {
  display: flex;
  flex-direction: column;

  font-size: variables.$fontsize-body-l;
  line-height: variables.$lineheight-l;

  list-style-type: none;

  @include breakpoints.respond-above(m) {
    &.inline {
      flex-direction: row;

      & > li:not(:last-child) {
        margin-right: variables.$spacing-m;
      }
    }
  }
}

.collapse {
  width: 100%;
  height: 2rem;
  overflow-y: hidden;

  button {
    border: none;
    height: 2rem;
  }
}

.isOpen {
  height: auto;
}
