schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
{
  query: Query
  mutation: Mutation
  subscription: Subscription
}

extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.0", import: ["@key", "@shareable"])

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

directive @key(fields: federation__FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @federation__requires(fields: federation__FieldSet!) on FIELD_DEFINITION

directive @federation__provides(fields: federation__FieldSet!) on FIELD_DEFINITION

directive @federation__external(reason: String) on OBJECT | FIELD_DEFINITION

directive @federation__tag(name: String!) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @federation__extends on OBJECT | INTERFACE

directive @shareable on OBJECT | FIELD_DEFINITION

directive @federation__inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @federation__override(from: String!) on FIELD_DEFINITION

type CmsImage {
  photographerCredit: LocalizedObject
  url: String
  title: String
}

type InternalIdObject {
  internalId: String
}

type LocalizedCmsImage {
  en: CmsImage
  fi: CmsImage
  sv: CmsImage
}

type LocalizedCmsKeywords {
  en: [String]
  fi: [String]
  sv: [String]
}

type LocalizedObject
  @shareable
{
  fi: String
  sv: String
  en: String
}

type Meta {
  count: Int!
  next: String
  previous: String
}

type Mutation {
  _empty: String
}

type Query {
  _empty: String
  _service: _Service!
}

extend type Query {
  eventDetails(id: ID, include: [String]): EventDetails!
  eventsByIds(eventType: [EventTypeId] = [General], ids: [ID!]!, include: [String], sort: String, pageSize: Int, page: Int, start: String, end: String): EventListResponse!
  eventList(eventType: [EventTypeId] = [General], internetBased: Boolean, localOngoingAnd: [String], localOngoingOr: [String], localOngoingOrSet1: [String], localOngoingOrSet2: [String], localOngoingOrSet3: [String], internetOngoingAnd: [String], internetOngoingOr: [String], allOngoing: Boolean, allOngoingAnd: [String], allOngoingOr: [String], combinedText: [String], division: [String], end: String, endsAfter: String, endsBefore: String, ids: [String], inLanguage: String, include: [String], isFree: Boolean, keywordAnd: [String], keywordOrSet1: [String], keywordOrSet2: [String], keywordOrSet3: [String], keywordNot: [String], keyword: [String], language: String, location: [String], page: Int, pageSize: Int, publisher: ID, sort: String, start: String, startsAfter: String, startsBefore: String, superEvent: ID, superEventType: [String], text: String, translation: String, suitableFor: [Int], audienceMinAgeGt: String, audienceMinAgeLt: String, audienceMaxAgeGt: String, audienceMaxAgeLt: String): EventListResponse!
}

extend type Query {
  keywordDetails(id: ID!): Keyword!
  keywordList(dataSource: String, hasUpcomingEvents: Boolean, page: Int, pageSize: Int, showAllKeywords: Boolean, sort: String, text: String): KeywordListResponse!
}

extend type Query {
  neighborhoodList: NeighborhoodListResponse!
}

extend type Query {
  organizationDetails(id: ID!): OrganizationDetails!
}

extend type Query {
  placeDetails(id: ID!): Place!
  placeList(dataSource: String, divisions: [String], hasUpcomingEvents: Boolean, page: Int, pageSize: Int, showAllPlaces: Boolean, sort: String, text: String): PlaceListResponse!
}

type StaticPage {
  id: ID!
  path: String
  depth: Int
  numchild: Int
  title: String
  draftTitle: String
  slug: String
  live: Boolean
  hasUnpublishedChanges: Boolean
  urlPath: String
  seoTitle: String
  showInMenus: Boolean
  searchDescription: String
  goLiveAt: String
  expireAt: String
  expired: Boolean
  locked: Boolean
  lockedAt: String
  firstPublishedAt: String
  keywords: LocalizedCmsKeywords
  lastPublishedAt: String
  latestRevisionCreatedAt: String
  headingSection: LocalizedObject
  contentSection: LocalizedObject
  contentYype: Int
  owner: Int
  lockedBy: String
  liveRevision: Int
}

type BannerPage {
  title: LocalizedObject
  description: LocalizedObject
  keywords: LocalizedCmsKeywords
  titleAndDescriptionColor: LocalizedObject
  buttonText: LocalizedObject
  buttonUrl: LocalizedObject
  heroBackgroundImage: LocalizedCmsImage
  heroBackgroundImageMobile: LocalizedCmsImage
  heroBackgroundImageColor: LocalizedObject
  heroTopLayerImage: LocalizedCmsImage
  socialMediaImage: LocalizedCmsImage
}

type Subscription {
  _empty: String
}

enum EventTypeId {
  General
  Course
}

type EventListResponse {
  meta: Meta!
  data: [EventDetails!]!
}

type EventDetails {
  id: ID!
  typeId: EventTypeId
  location: Place
  keywords: [Keyword!]!
  superEvent: InternalIdObject
  eventStatus: String
  externalLinks: [ExternalLink!]!
  offers: [Offer!]!
  dataSource: String
  publisher: ID
  subEvents: [InternalIdObject!]!
  images: [Image!]!
  inLanguage: [InLanguage!]!
  audience: [Audience!]!
  createdTime: String
  lastModifiedTime: String
  datePublished: String
  startTime: String
  endTime: String
  customData: String
  audienceMinAge: String
  audienceMaxAge: String
  superEventType: String
  name: LocalizedObject!
  locationExtraInfo: LocalizedObject
  shortDescription: LocalizedObject
  provider: LocalizedObject
  infoUrl: LocalizedObject
  providerContactInfo: String
  description: LocalizedObject
  internalId: String
  internalContext: String
  internalType: String
}

extend type EventDetails {
  enrolmentStartTime: String
  enrolmentEndTime: String
  maximumAttendeeCapacity: Int
  minimumAttendeeCapacity: Int
  remainingAttendeeCapacity: Int
}

type Audience {
  id: ID
  name: LocalizedObject
  internalId: String
  internalContext: String
  internalType: String
}

type ExternalLink {
  name: String
  link: String
  language: String
}

type InLanguage {
  id: ID
  translationAvailable: Boolean
  name: LocalizedObject
  internalId: String
  internalContext: String
  internalType: String
}

type Offer {
  isFree: Boolean
  description: LocalizedObject
  price: LocalizedObject
  infoUrl: LocalizedObject
}

type Image {
  id: ID
  license: String
  createdTime: String
  lastModifiedTime: String
  name: String!
  url: String!
  cropping: String
  photographerName: String
  dataSource: String
  publisher: String
  internalId: String!
  internalContext: String
  internalType: String
}

type KeywordListResponse {
  meta: Meta!
  data: [Keyword!]!
}

type Keyword
  @shareable
{
  id: ID
  altLabels: [String]
  createdTime: String
  hasUpcomingEvents: Boolean
  lastModifiedTime: String
  aggregate: Boolean
  deprecated: Boolean
  nEvents: Int
  image: Image
  dataSource: String
  publisher: ID
  name: LocalizedObject
  internalId: String!
  internalContext: String
  internalType: String
}

type NeighborhoodListResponse {
  meta: Meta!
  data: [Neighborhood!]!
}

type Neighborhood {
  id: ID!
  name: LocalizedObject!
}

type OrganizationDetails {
  id: ID
  dataSource: String
  classification: String
  name: String
  foundingDate: String
  dissolutionDate: String
  parentOrganization: String
  subOrganizations: [String]
  affiliatedOrganizations: [String]
  createdTime: String
  lastModifiedTime: String
  isAffiliated: Boolean!
  replacedBy: String
  internalId: String!
  internalContext: String
  internalType: String
}

type PlaceListResponse {
  meta: Meta!
  data: [Place!]!
}

type Place {
  id: ID
  divisions: [Division!]
  hasUpcomingEvents: Boolean
  createdTime: String
  lastModifiedTime: String
  customData: String
  email: String
  contactType: String
  addressRegion: String
  postalCode: String
  postOfficeBoxNum: String
  addressCountry: String
  deleted: Boolean
  nEvents: Int
  image: Image
  dataSource: String
  publisher: ID
  parent: ID
  replacedBy: String
  position: PlacePosition
  name: LocalizedObject
  description: String
  telephone: LocalizedObject
  addressLocality: LocalizedObject
  streetAddress: LocalizedObject
  infoUrl: LocalizedObject
  internalId: String!
  internalContext: String
  internalType: String
}

type Division {
  type: String!
  ocdId: String
  municipality: String
  name: LocalizedObject
}

type PlacePosition {
  type: String!
  coordinates: [Float!]!
}

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

scalar link__Import

scalar federation__FieldSet

scalar _Any

type _Service {
  sdl: String
}