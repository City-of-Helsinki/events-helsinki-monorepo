schema @link(url: "https://specs.apollo.dev/link/v1.0") {
  query: Query
}

extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.0"
    import: ["@key", "@shareable"]
  )

directive @link(
  url: String
  as: String
  for: link__Purpose
  import: [link__Import]
) repeatable on SCHEMA

directive @key(
  fields: federation__FieldSet!
  resolvable: Boolean = true
) repeatable on OBJECT | INTERFACE

directive @federation__requires(
  fields: federation__FieldSet!
) on FIELD_DEFINITION

directive @federation__provides(
  fields: federation__FieldSet!
) on FIELD_DEFINITION

directive @federation__external(reason: String) on OBJECT | FIELD_DEFINITION

directive @federation__tag(
  name: String!
) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @federation__extends on OBJECT | INTERFACE

directive @shareable on OBJECT | FIELD_DEFINITION

directive @federation__inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @federation__override(from: String!) on FIELD_DEFINITION

type Query {
  _service: _Service!
}

extend type Query {
  venue(id: ID!): Venue!
  venuesByIds(ids: [ID!]): [Venue!]!
}

type Point {
  type: String
  coordinates: [Float!]!
}

enum ResourceState {
  open
  closed
  undefined
  self_service
  with_key
  with_reservation
  open_and_reservable
  with_key_and_reservation
  enter_only
  exit_only
  weather_permitting
}

type Time {
  name: String!
  description: String!
  startTime: String!
  endTime: String!
  endTimeOnNextDay: Boolean!
  resourceState: ResourceState!
  fullDay: Boolean!
  periods: [Int!]!
}

type OpeningHour {
  date: String!
  times: [Time!]!
}

type Ontology {
  id: Int
  label: String
}

type AccessibilitySentences {
  groupName: String
  sentences: [String]
}

type Connection {
  sectionType: String
  name: String
  phone: String
  url: String
}

type Venue {
  addressLocality: String
  dataSource: String
  description: String
  email: String
  id: String!
  image: String
  infoUrl: String
  name: String
  position: Point
  postalCode: String
  streetAddress: String
  telephone: String

  """
  This field is currently disabled because the Hauki integration is not enabled
  """
  openingHours: [OpeningHour!]
    @deprecated(
      reason: "Hauki integration is currently disabled so this field can not be accessed"
    )

  """
  This field is currently disabled because the Hauki integration is not enabled
  """
  isOpen: Boolean
    @deprecated(
      reason: "Hauki integration is currently disabled so this field can not be accessed"
    )
  ontologyTree: [Ontology]!
  ontologyWords: [Ontology]!
  accessibilitySentences: [AccessibilitySentences]!
  connections: [Connection]!
}

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

scalar link__Import

scalar federation__FieldSet

scalar _Any

type _Service {
  sdl: String
}
